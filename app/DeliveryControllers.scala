/**
  * Generated by API Builder - https://www.apibuilder.io
  * Service version: 1.0.1
  * apibuilder 0.15.33 app.apibuilder.io/nashtech/delivery/latest/play_2_6_controllers
  */
package com.nashtech.delivery.v1.controllers

import com.nashtech.delivery.v1.models.json._

trait DeliveriesController extends play.api.mvc.BaseController {

  sealed trait GetById extends Product with Serializable
  object GetById {
    final case class HTTP200(body: com.nashtech.delivery.v1.models.Delivery) extends GetById
    case object HTTP401 extends GetById
    case object HTTP404 extends GetById
    final case class Undocumented(result: play.api.mvc.Result) extends GetById
  }

  def getById(
      request: play.api.mvc.Request[play.api.mvc.AnyContent],
      merchantId: String,
      id: String
  ): scala.concurrent.Future[GetById]
  final def getById(merchantId: String, id: String): play.api.mvc.Action[play.api.mvc.AnyContent] = Action.async {
    request =>
      getById(request, merchantId, id)
        .map {
          case r: GetById.HTTP200      => Status(200)(play.api.libs.json.Json.toJson(r.body))
          case GetById.HTTP401         => Status(401)(play.api.mvc.Results.EmptyContent())
          case GetById.HTTP404         => Status(404)(play.api.mvc.Results.EmptyContent())
          case r: GetById.Undocumented => r.result
        }(defaultExecutionContext)
  }

}
